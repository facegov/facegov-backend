name: Multi-Lambda CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        function: [DynamoDBEmailNotifier, PartiesComparator, StockBuyer, StockChecker, StockSeller, UserRegistration]
        function: [ UserRegistration]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x functions/${{ matrix.function }}/gradlew
    - name: Build with Gradle
      run: |
        cd functions/${{ matrix.function }}
        ./gradlew build
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.function }}-package
        path: functions/${{ matrix.function }}/build/libs/*.jar

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        function: [DynamoDBEmailNotifier, PartiesComparator, StockBuyer, StockChecker, StockSeller, UserRegistration]
        function: [UserRegistration]
    steps:
    - uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.function }}-package
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Deploy to AWS Lambda
      run: |
        FUNCTION_NAME=$(echo "${{ matrix.function }}" | sed 's/\([A-Z]\)/-\1/g' | sed 's/^-//' | tr '[:upper:]' '[:lower:]')
        aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://$(ls *.jar)
